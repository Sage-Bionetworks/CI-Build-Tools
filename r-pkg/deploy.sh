# This script, when run from Jenkins, takes as input the artifacts generated by an "*_artifacts" job and publishes the R packages
# to a S3 hosted CRAN-like repository.  Users can then install the packages using the commmand:
# install.packages(<package-name>, repos="http://<S3_RAN>.synapse.org")

# Params
# AWS_ACCESS_KEY_ID -- S3 creds
# AWS_SECRET_ACCESS_KEY -- S3 creds
# S3_RAN -- either "staging-ran.synapse.org" or "ran.synapse.org"

## unpack the artifact
rm -rf unpacked
mkdir unpacked
unzip *.zip -d unpacked

home=`pwd`

# remove the last build clone
set +e
rm -R ${S3_RAN}
set -e

# retrieving the current content of S3_RAN
mkdir ${S3_RAN}
cd ${S3_RAN}
aws s3 sync s3://${S3_RAN}/ .
cd ..

# switch to R 3.4.  We assume we're running on unix so we do it like this:
sudo update-alternatives --set R /usr/local/R/R-3.4/bin/R

## the archive file has a single directory
## for each R version
for RVERS in `ls unpacked/`
do
  for f in `ls unpacked/$RVERS`
  do
    echo "deploying $RVERS/$f"
    R -e "root<-'"$home"/"$S3_RAN"';\
    if (endsWith(tolower('"$f"'), '.tar.gz')) {;\
      writePackagesType<-'source';\
      contribUrlType<-'source';\
    } else if (endsWith(tolower('"$f"'), '.tgz')) {;\
      writePackagesType<-'mac.binary';\
      if ('"$RVERS"'=='3.3') {;\
          contribUrlType<-'mac.binary.mavericks';\
      } else if ('"$RVERS"'=='3.4' || '"$RVERS"'=='3.5') {;\
          contribUrlType<-'mac.binary.el-capitan';\
      } else {;\
          contribUrlType<-'mac.binary';\
      };\
    } else if (endsWith(tolower('"$f"'), '.zip')) {;\
      writePackagesType<-'win.binary';\
      contribUrlType<-'win.binary';\
    } else {;\
        stop('Unknown package type', call. = FALSE);\
    };\
    dest<-contrib.url(root,type=contribUrlType);\
    dest<-gsub('3.4', '"$RVERS"', dest, fixed=TRUE);\
    dir.create(dest, showWarnings=FALSE, recursive=TRUE);\
    file.rename('unpacked/"$RVERS"/"$f"', file.path(dest, '"$f"'));\
    tools:::write_PACKAGES(dest, type=writePackagesType, latestOnly=FALSE);\
    message(sprintf('Installed %s to %s', 'unpacked/"$RVERS"/"$f"', file.path(dest, '"$f"')))"
  done
done

# upload
cd ${S3_RAN}
aws s3 . sync s3://${S3_RAN}/
cd ..

# clean up
rm -rf ${S3_RAN}
rm -rf unpacked

